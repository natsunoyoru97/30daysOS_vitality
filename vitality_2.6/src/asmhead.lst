     1 00000000                                 ; TAB=4
     2 00000000                                 
     3 00000000                                 [INSTRSET "i486p"]
     4 00000000                                 
     5  = 00000105                              VBEMODE	EQU		0x105			; 1024 x  768 x 8bit color
     6 00000000                                 ; （画面モード一覧）
     7 00000000                                 ;	0x100 :  640 x  400 x 8bit color
     8 00000000                                 ;	0x101 :  640 x  480 x 8bit color
     9 00000000                                 ;	0x103 :  800 x  600 x 8bit color
    10 00000000                                 ;	0x105 : 1024 x  768 x 8bit color
    11 00000000                                 ;	0x107 : 1280 x 1024 x 8bit color
    12 00000000                                 
    13  = 00280000                              BOTPAK	EQU		0x00280000		; load bootpack
    14  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    15  = 00008000                              DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（实模式）
    16 00000000                                 
    17 00000000                                 ; BOOT_INFO设定
    18  = 00000FF0                              CYLS	EQU		0x0ff0			; 设定磁盘扇区
    19  = 00000FF1                              LEDS	EQU		0x0ff1
    20  = 00000FF2                              VMODE	EQU		0x0ff2			; 颜色模式（bit color）
    21  = 00000FF4                              SCRNX	EQU		0x0ff4			; 分辨率X
    22  = 00000FF6                              SCRNY	EQU		0x0ff6			; 分辨率Y
    23  = 00000FF8                              VRAM	EQU		0x0ff8			; 显卡缓冲区加载区域
    24 00000000                                 
    25                                          		ORG		0xc200			; 程序开始读取的位置
    26 0000C200                                 
    27 0000C200                                 ; 是否有VBE
    28 0000C200                                 
    29 0000C200 B8 9000                         		MOV		AX,0x9000
    30 0000C203 8E C0                           		MOV		ES,AX
    31 0000C205 BF 0000                         		MOV		DI,0
    32 0000C208 B8 4F00                         		MOV		AX,0x4f00
    33 0000C20B CD 10                           		INT		0x10
    34 0000C20D 3D 004F                         		CMP		AX,0x004f
    35 0000C210 75 52                           		JNE		scrn320
    36 0000C212                                 
    37 0000C212                                 ; 检查VBE版本是否为2.0及以上
    38 0000C212                                 
    39 0000C212 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    40 0000C216 3D 0200                         		CMP		AX,0x0200
    41 0000C219 72 49                           		JB		scrn320			; if (AX < 0x0200) goto scrn320
    42 0000C21B                                 
    43 0000C21B                                 ; 获取画面模式信息
    44 0000C21B                                 
    45 0000C21B B9 0105                         		MOV		CX,VBEMODE
    46 0000C21E B8 4F01                         		MOV		AX,0x4f01
    47 0000C221 CD 10                           		INT		0x10
    48 0000C223 3D 004F                         		CMP		AX,0x004f
    49 0000C226 75 3C                           		JNE		scrn320
    50 0000C228                                 
    51 0000C228                                 ; 确认画面模式信息
    52 0000C228                                 
    53 0000C228 26 80 7D 19 08                  		CMP		BYTE [ES:DI+0x19],8
    54 0000C22D 75 35                           		JNE		scrn320
    55 0000C22F 26 80 7D 1B 04                  		CMP		BYTE [ES:DI+0x1b],4
    56 0000C234 75 2E                           		JNE		scrn320
    57 0000C236 26 8B 05                        		MOV		AX,[ES:DI+0x00]
    58 0000C239 25 0080                         		AND		AX,0x0080
    59 0000C23C 74 26                           		JZ		scrn320			; 模式属性第7位bit为0，放弃
    60 0000C23E                                 
    61 0000C23E                                 ; 切换画面模式
    62 0000C23E                                 
    63 0000C23E BB 4105                         		MOV		BX,VBEMODE+0x4000
    64 0000C241 B8 4F02                         		MOV		AX,0x4f02
    65 0000C244 CD 10                           		INT		0x10
    66 0000C246 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 存储画面模式信息（C语言参照用）
    67 0000C24B 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    68 0000C24F A3 0FF4                         		MOV		[SCRNX],AX
    69 0000C252 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    70 0000C256 A3 0FF6                         		MOV		[SCRNY],AX
    71 0000C259 66 26 8B 45 28                  		MOV		EAX,[ES:DI+0x28]
    72 0000C25E 66 A3 0FF8                      		MOV		[VRAM],EAX
    73 0000C262 EB 20                           		JMP		keystatus
    74 0000C264                                 
    75 0000C264                                 scrn320:
    76 0000C264 B0 13                           		MOV		AL,0x13			; VGA graphics, 320x200x8bit color
    77 0000C266 B4 00                           		MOV		AH,0x00
    78 0000C268 CD 10                           		INT		0x10
    79 0000C26A C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 存储画面模式信息（C语言参照用）
    80 0000C26F C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
    81 0000C275 C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
    82 0000C27B 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
    83 0000C284                                 
    84 0000C284                                 ; 向BIOS输入键盘信息
    85 0000C284                                 
    86 0000C284                                 keystatus:
    87 0000C284 B4 02                           		MOV		AH,0x02
    88 0000C286 CD 16                           		INT		0x16 			; keyboard BIOS
    89 0000C288 A2 0FF1                         		MOV		[LEDS],AL
    90 0000C28B                                 
    91 0000C28B                                 ; PIC处理一切中断请求
    92 0000C28B                                 ;	不在CLI之前初始化PIC则有时会hang up
    93 0000C28B                                 ;	PICの初期化はあとでやる
    94 0000C28B                                 
    95 0000C28B B0 FF                           		MOV		AL,0xff
    96 0000C28D E6 21                           		OUT		0x21,AL
    97 0000C28F 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
    98 0000C290 E6 A1                           		OUT		0xa1,AL
    99 0000C292                                 
   100 0000C292 FA                              		CLI						; さらにCPUレベルでも割り込み禁止
   101 0000C293                                 
   102 0000C293                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   103 0000C293                                 
   104 0000C293 E8 00B5                         		CALL	waitkbdout
   105 0000C296 B0 D1                           		MOV		AL,0xd1
   106 0000C298 E6 64                           		OUT		0x64,AL
   107 0000C29A E8 00AE                         		CALL	waitkbdout
   108 0000C29D B0 DF                           		MOV		AL,0xdf			; enable A20
   109 0000C29F E6 60                           		OUT		0x60,AL
   110 0000C2A1 E8 00A7                         		CALL	waitkbdout
   111 0000C2A4                                 
   112 0000C2A4                                 ; 进入保护模式
   113 0000C2A4                                 
   114 0000C2A4 0F 01 16 C38A                   		LGDT	[GDTR0]			; 暫定GDTを設定
   115 0000C2A9 0F 20 C0                        		MOV		EAX,CR0
   116 0000C2AC 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; 设bit31为0（禁止分页）
   117 0000C2B2 66 83 C8 01                     		OR		EAX,0x00000001	; 设bit0为1（以进入保护模式）
   118 0000C2B6 0F 22 C0                        		MOV		CR0,EAX
   119 0000C2B9 EB 00                           		JMP		pipelineflush
   120 0000C2BB                                 pipelineflush:
   121 0000C2BB B8 0008                         		MOV		AX,1*8			; 可读写内存为32bit
   122 0000C2BE 8E D8                           		MOV		DS,AX
   123 0000C2C0 8E C0                           		MOV		ES,AX
   124 0000C2C2 8E E0                           		MOV		FS,AX
   125 0000C2C4 8E E8                           		MOV		GS,AX
   126 0000C2C6 8E D0                           		MOV		SS,AX
   127 0000C2C8                                 
   128 0000C2C8                                 ; bootpackの転送
   129 0000C2C8                                 
   130 0000C2C8 66 BE 0000C390                  		MOV		ESI,bootpack	; 転送元
   131 0000C2CE 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
   132 0000C2D4 66 B9 00020000                  		MOV		ECX,512*1024/4
   133 0000C2DA E8 0075                         		CALL	memcpy
   134 0000C2DD                                 
   135 0000C2DD                                 ; ついでにディスクデータも本来の位置へ転送
   136 0000C2DD                                 
   137 0000C2DD                                 ; まずはブートセクタから
   138 0000C2DD                                 
   139 0000C2DD 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
   140 0000C2E3 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
   141 0000C2E9 66 B9 00000080                  		MOV		ECX,512/4
   142 0000C2EF E8 0060                         		CALL	memcpy
   143 0000C2F2                                 
   144 0000C2F2                                 ; 残り全部
   145 0000C2F2                                 
   146 0000C2F2 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   147 0000C2F8 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   148 0000C2FE 66 B9 00000000                  		MOV		ECX,0
   149 0000C304 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   150 0000C308 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   151 0000C30F 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   152 0000C316 E8 0039                         		CALL	memcpy
   153 0000C319                                 
   154 0000C319                                 ; asmhead的工作已完成，接下来是bootpack的设置
   155 0000C319                                 
   156 0000C319                                 ; bootpackの起動
   157 0000C319                                 
   158 0000C319 66 BB 00280000                  		MOV		EBX,BOTPAK
   159 0000C31F 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   160 0000C324 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   161 0000C328 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   162 0000C32C 74 10                           		JZ		skip			; 転送するべきものがない
   163 0000C32E 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   164 0000C333 66 01 DE                        		ADD		ESI,EBX
   165 0000C336 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   166 0000C33B E8 0014                         		CALL	memcpy
   167 0000C33E                                 skip:
   168 0000C33E 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   169 0000C343 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   170 0000C34B                                 
   171 0000C34B                                 waitkbdout:
   172 0000C34B E4 64                           		IN		 AL,0x64
   173 0000C34D 24 02                           		AND		 AL,0x02
   174 0000C34F 75 FA                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   175 0000C351 C3                              		RET
   176 0000C352                                 
   177 0000C352                                 memcpy:
   178 0000C352 67 66 8B 06                     		MOV		EAX,[ESI]
   179 0000C356 66 83 C6 04                     		ADD		ESI,4
   180 0000C35A 67 66 89 07                     		MOV		[EDI],EAX
   181 0000C35E 66 83 C7 04                     		ADD		EDI,4
   182 0000C362 66 83 E9 01                     		SUB		ECX,1
   183 0000C366 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   184 0000C368 C3                              		RET
   185 0000C369                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、string命令でも書ける
   186 0000C369                                 
   187 0000C369 00 00 00 00 00 00 00            		ALIGNB	16
   188 0000C370                                 GDT0:
   189 0000C370 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   190 0000C378 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 可读写内存为32bit
   191 0000C380 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   192 0000C388                                 
   193 0000C388 0000                            		DW		0
   194 0000C38A                                 GDTR0:
   195 0000C38A 0017                            		DW		8*3-1
   196 0000C38C 0000C370                        		DD		GDT0
   197 0000C390                                 
   198 0000C390                                 		ALIGNB	16
   199 0000C390                                 bootpack:
